name: Build macOS Intel DMG (Signed Debug)

on:
  workflow_dispatch:   # ÊâãÂä®Ëß¶ÂèëÔºåÂÖàË∞ÉËØïÁ≠æÂêç
  push:
    tags:
      - "v*"

jobs:
  build-mac-dmg:
    runs-on: macos-13
    env:
      CI: true
      MAC_CERT_P12_BASE64: ${{ secrets.MAC_CERT_P12_BASE64 }}
      MAC_CERT_PWD: ${{ secrets.MAC_CERT_PWD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Enable pnpm
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Import signing certificate
        run: |
          echo "$MAC_CERT_P12_BASE64" | base64 --decode > certificate.p12
          KEYCHAIN=build.keychain
          security create-keychain -p "" "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security import certificate.p12 -k "$HOME/Library/Keychains/$KEYCHAIN" -P "$MAC_CERT_PWD" -A -T /usr/bin/codesign -T /usr/bin/security
          echo "‚úÖ Certificates in keychain:"
          security find-identity -v -p codesigning "$HOME/Library/Keychains/$KEYCHAIN"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build workspace packages
        run: pnpm -r run build

      - name: Build DMG (signed only)
        working-directory: apps/electron
        run: pnpm exec electron-forge make --verbose

      - name: Verify codesign
        run: |
          APP_PATH=$(find apps/electron/out -name "*.app" | head -n 1)
          echo "üîç Checking codesign for $APP_PATH"
          codesign -dv --verbose=4 "$APP_PATH" || true
          spctl -a -vv "$APP_PATH" || true

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: MCPRouter-macOS-Intel-signed
          path: apps/electron/out/make/**/*.dmg
